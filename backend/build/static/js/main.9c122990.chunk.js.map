{"version":3,"sources":["components/Login.js","components/SignIn.js","graphql/mutations.js","graphql/queries.js","components/ChoiceCalendar.js","components/AddEvent.js","components/AddGroup.js","components/EventCalendar.js","components/Event.js","components/PreviewCalendar.js","components/Events.js","components/HomePage.js","components/Groups.js","components/Users.js","components/Group.js","components/User.js","components/JoinGroup.js","components/Notification.js","hooks/useLogin.js","App.js","index.js"],"names":["Login","login","initialValues","username","password","onSubmit","a","resetForm","values","handleChange","handleBlur","handleSubmit","id","type","name","onChange","onBlur","value","to","SignIn","signIn","LOGIN","gql","ADD_EVENT","SIGN_IN","ADD_GROUP","JOIN_GROUP","VOTE_EVENT","ME","USER_GROUPS","EVENT","GET_GROUP","GROUPS_THAT_USER_IS_NOT_IN","GET_USER","Header","month","setMonth","className","onClick","dateFns","Days","startDate","shortWeekDaysArray","Array","from","map","e","i","Cells","setDates","dates","monthStart","monthEnd","endDate","rows","days","day","formattedDate","cloneDay","push","CalendarDate","useState","clicked","setClicked","concat","onDateClick","ChoiceCalendar","Date","AddEvent","setNotification","choice","setChoice","groups","useQuery","options","data","me","group","label","useMutation","update","store","response","console","log","dataInStore","readQuery","query","eventsInStore","events","writeQuery","addEvent","length","message","error","setTimeout","variables","selectedOption","AddGroup","addGroup","users","setUsers","user","result","setFieldValue","join","setVotes","votes","ChoiceDate","vote","setVote","cloneVotes","dayIndex","findIndex","date","useEffect","includes","EventCalendar","Event","onError","useParams","event","initialVotes","filter","voter","find","PreviewCalendar","status","finalDate","Events","displayEvents","HomePage","logout","Button","Groups","displayGroups","userGroups","Users","displayUsers","Group","JoinGroupElement","JoinGroup","groupsUserNotIn","Notification","notification","style","useLogin","setToken","history","useHistory","client","useApolloClient","graphQLErrors","startsWith","signInMutation","loginMutation","localStorage","setItem","clear","resetStore","AppRouter","getItem","token","path","User","App","authLink","setContext","_","headers","authorization","httpLink","HttpLink","uri","ApolloClient","cache","InMemoryCache","link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c122990.chunk.js","sourcesContent":["import { Formik } from \"formik\"\nimport { Link } from \"react-router-dom\"\nimport React from \"react\"\n\nconst Login = ({ login }) => {\n  return(\n    <div>\n      <h1>Login</h1>\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={ async ({ username, password }, { resetForm }) => {\n          await login({ username, password })\n          resetForm({ values: { username: \"\", password: \"\" } })\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n           username: <input\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.username}\n            />\n\n            <br/>\n\n           password: <input\n              id=\"password\"\n              type= \"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <br/>\n            <button type=\"submit\" id=\"login-button\">\n             Login\n            </button>\n          </form>\n        )}\n      </Formik>\n      <h2>Not yet signed in?</h2>\n      <button id=\"signIn-button\"><Link to=\"SignIn\">Sign In</Link></button>\n    </div>\n  )}\n\n\nexport default Login","import React from \"react\"\nimport { Formik } from \"formik\"\n\nconst SignIn = ({ login, signIn }) => {\n  const onSubmit = async ({ username, name, password }, { resetForm }) => {\n    const signInSuccessful = await signIn(username, name, password)\n    if(signInSuccessful){\n      await login({ username, password })\n    }\n\n    resetForm({ values: { username: \"\", password: \"\", name: \"\" } })\n  }\n\n\n\n\n\n\n\n  return(\n    <div>\n      <h1>Sign In</h1>\n      <Formik\n        initialValues={{ username: \"\", password: \"\", name: \"\" }}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n           username: <input\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.username}\n            />\n\n            <br/>\n\n            name: <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n            />\n\n            <br/>\n\n           password: <input\n              id=\"password\"\n              type= \"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <br/>\n            <button type=\"submit\" id=\"submit-button\">\n             Sign In\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  )}\n\n\nexport default SignIn","import { gql } from \"@apollo/client\"\n\nexport const LOGIN = gql`\nmutation login($username: String!, $password: String!){\n  login(username: $username, password: $password){value}\n}`\n\nexport const ADD_EVENT = gql`\nmutation addEvent($name: String! $group: String! $dates: [String!]!){\n  addEvent(name: $name, group: $group dates: $dates){name id}\n}`\n\nexport const SIGN_IN = gql`\nmutation createUser($name: String! $username: String! $password: String!){\n  createUser(name: $name, username: $username, password: $password){name}\n}`\n\nexport const ADD_GROUP = gql`\nmutation addGroup($name: String! $users: [String]!){\n  createGroup(name: $name, users: $users){name}\n}`\n\nexport const JOIN_GROUP = gql`\nmutation joinGroup($id: ID!){\n  joinGroup(id: $id){name}\n}`\n\nexport const VOTE_EVENT = gql`\nmutation voteEvent($id: ID!, $votes: [VoteInput]!){\n  voteEvent(id: $id, votes: $votes){dates{votes{voter vote}}}\n}`\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const ME = gql`\nquery{\n  me{\n    name\n    username\n    events{\n      name\n      id\n      status\n      finalDate\n    }\n  }\n}`\n\nexport const ALL_EVENTS = gql`\nquery{\n  allEvents{\n    name\n  }\n}`\n\nexport const USER_GROUPS = gql`\nquery{\n  me{\n    groups{\n      name\n      id\n    }\n  }\n}`\n\nexport const USER_EVENTS = gql`\nquery{\n  userEvents{\n    name\n    id\n  }\n}`\n\nexport const EVENT = gql`\nquery event($id: ID!){\n  event(id: $id){\n    name\n    id\n    status\n    dates{\n      date\n      votes{\n        voter\n        vote\n      }\n    }\n  }\n}`\n\nexport const GET_GROUP = gql`\nquery group($id: ID!){\n  group(id: $id){\n    name\n    id\n    users{\n      name\n      username\n      id\n    }\n  }\n}`\n\nexport const GROUPS_THAT_USER_IS_NOT_IN = gql`\nquery{\n  groupsUserNotIn{\n    name\n    id\n  }\n}`\n\nexport const GET_USER = gql`\nquery user($username: String!){\n  user(username: $username){\n    name\n    id\n  }\n}`\n\nexport const ALL_GROUPS = gql`\nquery{\n  allGroups{\n    name\n    id\n  }\n}`\n","import React, { useState } from \"react\"\nimport * as dateFns from \"date-fns\"\nimport \"../App.css\"\n\nconst ChoiceCalendar = ({ setDates, dates }) => {\n  const [ month, setMonth ] = useState(new Date())\n  return(\n    <div className=\"calendar\">\n      <Header month={month} setMonth={setMonth}/>\n      <Days month={month}/>\n      <Cells month={month} setDates = {setDates} dates={dates}/>\n    </div>\n  )\n}\n\nconst Header = ({ month, setMonth }) => {\n  const dateFormat = \"MMMM YYYYY\"\n\n  const nextMonth = () => {\n    setMonth(dateFns.addMonths(month, 1))\n  }\n\n  const prevMonth = () => {\n    setMonth(dateFns.subMonths(month,1))\n  }\n\n  return (\n    <div className=\"header row flex-middle\">\n      <div className=\"col col-start\">\n        <div className=\"icon\" onClick={prevMonth}>\n          chevron_left\n        </div>\n      </div>\n      <div className=\"col col-center\">\n        <span>\n          {dateFns.format(month, dateFormat)}\n        </span>\n      </div>\n      <div className=\"col col-end\" onClick={nextMonth}>\n        <div className=\"icon\">chevron_right</div>\n      </div>\n    </div>\n  )\n\n}\n\nconst Days = ({ month }) => {\n\n  let startDate = dateFns.startOfWeek(month)\n\n  const shortWeekDaysArray = Array.from(Array(7)).map((e, i) => (<div className=\"col col-center\" key={i}>\n    {dateFns.format(dateFns.addDays(startDate, i), \"EEEEEE\")}\n  </div> ))\n\n  return(\n    <div className=\"days row\">{shortWeekDaysArray}</div>\n  )\n}\n\nconst Cells = ({ month, setDates, dates }) => {\n\n  const monthStart = dateFns.startOfMonth(month)\n  const monthEnd = dateFns.endOfMonth(monthStart)\n  const startDate = dateFns.startOfWeek(monthStart)\n  const endDate = dateFns.endOfWeek(monthEnd)\n\n  const dateFormat = \"d\"\n  const rows = []\n\n  let days = []\n  let day = startDate\n  let formattedDate = \"\"\n\n  while(day <= endDate){\n    for(let i = 0; i<7; i++){\n      formattedDate = dateFns.format(day, dateFormat)\n      const cloneDay = day\n      days.push(\n        <CalendarDate key={cloneDay} formattedDate = {formattedDate} day={cloneDay} monthStart={monthStart} setDates={setDates} dates={dates}/>\n      )\n      day = dateFns.addDays(day, 1)\n    }\n    rows.push(\n      <div className=\"row\" key={day}>\n        {days}\n      </div>\n    )\n    days=[]\n  }\n\n  return(\n    <div className=\"body\">{rows}</div>\n  )\n\n}\n\nconst CalendarDate = ({ formattedDate, day, monthStart,setDates, dates }) => {\n\n  const [ clicked, setClicked ] = useState(false)\n\n  const onDateClick = day => {\n    setClicked(!clicked)\n    setDates(dates.concat(dateFns.format(day, \"DDD\")))\n  }\n\n  let className = \"col cell default\"\n  if(!dateFns.isSameMonth(day, monthStart)){\n    className =\"col cell disabled\"\n  }\n  if(clicked){\n    className = \"col cell green\"\n  }\n  return(\n    <div\n      id={`dates-${formattedDate}`}\n      className={className}\n      key={day}\n      onClick = {() => onDateClick(day)}\n    >\n      <span className=\"number\">{formattedDate}</span>\n      <span className=\"bg\">{formattedDate}</span>\n    </div>\n  )\n}\n\nexport default ChoiceCalendar","import React, { useState } from \"react\"\nimport { Formik } from \"formik\"\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { ADD_EVENT } from \"../graphql/mutations\"\nimport { ME, USER_GROUPS } from \"../graphql/queries\"\nimport Select from \"react-select\"\nimport ChoiceCalendar from \"./ChoiceCalendar\"\nimport { Link } from \"react-router-dom\"\nconst AddEvent = ({ setNotification }) => {\n  const [ dates, setDates] = useState([])\n  const [choice, setChoice] = useState(null)\n  const handleChoice = selectedOption => {\n    setChoice(selectedOption.value)\n  }\n  const groups = useQuery(USER_GROUPS)\n  let options = []\n  if(groups.data){\n    options = groups.data.me.groups.map(group => (\n      { value: group.name, label: group.name }\n    ))\n  }\n  const [addEvent ] = useMutation(ADD_EVENT, {\n    update: (store, response) => {\n      console.log(\"dataInStore:\")\n      const dataInStore = store.readQuery({ query: ME })\n      const eventsInStore = dataInStore.me.events\n      console.log(dataInStore.me)\n      console.log(eventsInStore)\n      console.log(response)\n      store.writeQuery({\n        query: ME,\n        data: {\n          me: {\n            ...dataInStore.me,\n            events: eventsInStore.concat(response.data.addEvent)\n          }\n        }\n      })\n    }\n  })\n  return(\n    <div>\n      <h1>New Event</h1>\n      <Formik\n        initialValues={{ name: \"\" }}\n        onSubmit={({ name }, { resetForm }) => {\n          if(dates.length === 0){\n            setNotification({ message: \"pick possible dates\", error: true })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          }\n          else{\n            addEvent({ variables:{ name, group: choice, dates } })\n            resetForm({})\n          }\n\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n           event name: <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n            />\n            <button id =\"submit-button\"type=\"submit\">\n             Submit\n            </button>\n          </form>\n        )}\n      </Formik>\n      <Select id=\"group-options\"options={options} onChange={handleChoice} />\n      <h2>Choose possible days</h2>\n      <ChoiceCalendar dates={dates} setDates={setDates}/>\n      <button id=\"homepage-button\"> <Link to=\"/\">Home Page</Link></button>\n    </div>\n  )}\n\n\nexport default AddEvent","import React, { useState } from \"react\"\nimport { Formik } from \"formik\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/client\"\nimport { ADD_GROUP } from \"../graphql/mutations\"\nconst AddGroup = () => {\n  const[addGroup]  = useMutation(ADD_GROUP)\n  const [ users, setUsers] = useState([])\n  return(\n    <div>\n      <h1>New Group</h1>\n      <Formik\n        initialValues={{ name: \"\", user: \"\" }}\n        onSubmit={async ({ name }, { resetForm }) => {\n          console.log(name)\n          console.log(users)\n          const result = await addGroup({ variables: { name, users } })\n          console.log(result.data)\n          resetForm({})\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n           group name: <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n            />\n            <br/>\n          users: <input\n              id=\"user\"\n              type=\"text\"\n              name=\"user\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.user}/>\n            <button type=\"button\" id=\"add-user-button\" onClick={() => {\n              setUsers(users.concat(values.user))\n              setFieldValue(\"user\", \"\")\n            }}>add user</button>\n            <br/>\n            {users.join(\" \")}\n            <br/>\n            <button id =\"submit-button\"type=\"submit\">\n             Submit\n            </button>\n          </form>\n        )}\n      </Formik>\n      <button id=\"homepage-button\"> <Link to=\"/\">Home Page</Link></button>\n    </div>\n  )}\n\n\nexport default AddGroup","import React, { useEffect, useState } from \"react\"\nimport * as dateFns from \"date-fns\"\nimport \"../App.css\"\n\nconst EventCalendar = ({ dates, setVotes, votes }) => {\n\n\n  const [ month, setMonth ] = useState(new Date())\n  return(\n    <div className=\"calendar\">\n      <Header month={month} setMonth={setMonth}/>\n      <Days month={month}/>\n      <Cells month={month} dates={dates} setVotes={setVotes} votes={votes}/>\n      <ul>{dates}</ul>\n    </div>\n  )\n}\n\nconst Header = ({ month, setMonth }) => {\n  const dateFormat = \"MMMM YYYYY\"\n\n  const nextMonth = () => {\n    setMonth(dateFns.addMonths(month, 1))\n  }\n\n  const prevMonth = () => {\n    setMonth(dateFns.subMonths(month,1))\n  }\n\n  return (\n    <div className=\"header row flex-middle\">\n      <div className=\"col col-start\">\n        <div className=\"icon\" onClick={prevMonth}>\n          chevron_left\n        </div>\n      </div>\n      <div className=\"col col-center\">\n        <span>\n          {dateFns.format(month, dateFormat)}\n        </span>\n      </div>\n      <div className=\"col col-end\" onClick={nextMonth}>\n        <div className=\"icon\">chevron_right</div>\n      </div>\n    </div>\n  )\n\n}\n\nconst Days = ({ month }) => {\n\n  let startDate = dateFns.startOfWeek(month)\n\n  const shortWeekDaysArray = Array.from(Array(7)).map((e, i) => (<div className=\"col col-center\" key={i}>\n    {dateFns.format(dateFns.addDays(startDate, i), \"EEEEEE\")}\n  </div> ))\n\n  return(\n    <div className=\"days row\">{shortWeekDaysArray}</div>\n  )\n}\n\nconst Cells = ({ month, dates, setVotes, votes }) => {\n\n  const monthStart = dateFns.startOfMonth(month)\n  const monthEnd = dateFns.endOfMonth(monthStart)\n  const startDate = dateFns.startOfWeek(monthStart)\n  const endDate = dateFns.endOfWeek(monthEnd)\n\n  const dateFormat = \"d\"\n  const rows = []\n\n  let days = []\n  let day = startDate\n  let formattedDate = \"\"\n\n  while(day <= endDate){\n    for(let i = 0; i<7; i++){\n      formattedDate = dateFns.format(day, dateFormat)\n      const cloneDay = day\n      days.push(\n        <CalendarDate key={cloneDay} formattedDate = {formattedDate} day={cloneDay} monthStart={monthStart} dates={dates} setVotes={setVotes} votes={votes}/>\n      )\n      day = dateFns.addDays(day, 1)\n    }\n    rows.push(\n      <div className=\"row\" key={day}>\n        {days}\n      </div>\n    )\n    days=[]\n  }\n\n  return(\n    <div className=\"body\">{rows}</div>\n  )\n\n}\n\nconst ChoiceDate = ({ day, formattedDate, votes, setVotes }) => {\n  const [vote, setVote] = useState(\"\")\n  const cloneVotes = [...votes]\n  const dayIndex = cloneVotes.findIndex(vote => vote.date === dateFns.format(day, \"DDD\"))\n  useEffect(() => {\n    if(cloneVotes[dayIndex]){\n      setVote(cloneVotes[dayIndex].vote)\n    }\n  }, [dayIndex])\n  const onClick = (vote) => {\n    if(vote===\"blue\"){\n      setVote(\"green\")\n      cloneVotes[dayIndex].vote = \"green\"\n      console.log(day)\n      console.log(dayIndex)\n      console.log(cloneVotes)\n      setVotes(cloneVotes)\n\n    }\n    else if(vote === \"green\"){\n      setVote(\"red\")\n      cloneVotes[dayIndex].vote = \"red\"\n      console.log(day)\n      console.log(dayIndex)\n      console.log(cloneVotes)\n      setVotes(cloneVotes)\n    }\n    else{\n      setVote(\"blue\")\n      cloneVotes[dayIndex].vote = \"blue\"\n      console.log(day)\n      console.log(dayIndex)\n      console.log(cloneVotes)\n      setVotes(cloneVotes)\n    }\n  }\n  console.log(`dates-${formattedDate}`)\n  return(\n    <div onClick={() => onClick(vote)}\n      id={`dates-${formattedDate}`}\n      className={`col cell ${vote}`}\n      key={day}>\n      <span className=\"number\">{formattedDate}</span>\n      <span className=\"bg\">{formattedDate}</span>\n    </div>\n  )\n}\n\nconst CalendarDate = ({ formattedDate, day, monthStart, dates, setVotes, votes }) => {\n  if(dates.includes(dateFns.format(day, \"DDD\"))){\n    return(\n      <ChoiceDate setVotes={setVotes} votes={votes} day={day} formattedDate = {formattedDate}/>\n\n    )\n  }\n\n  return(\n    <div\n      className={`col cell ${!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : \"\"}`}\n      key={day}\n    >\n      <span className=\"number\">{formattedDate}</span>\n      <span className=\"bg\">{formattedDate}</span>\n    </div>\n  )\n}\n\nexport default EventCalendar","import React, { useState, useEffect } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { useParams } from \"react-router-dom\"\nimport { ME, EVENT } from \"../graphql/queries\"\nimport EventCalendar from \"./EventCalendar\"\nimport { VOTE_EVENT } from \"../graphql/mutations\"\nimport { Link } from \"react-router-dom\"\n\nconst Event = () => {\n  const [ votes, setVotes ] = useState([])\n  const [ vote, response ] = useMutation(VOTE_EVENT, {\n    onError : (error) => {\n      console.log(error)\n    }\n  })\n  console.log(response)\n  const id = useParams().id\n  const user= useQuery(ME)\n  const event = useQuery(EVENT, { variables: { id } })\n  useEffect(() => {\n    if(event.data && user.data){\n      console.log(event.data.event)\n      console.log(event.data.event.dates)\n      console.log(user.data.me.username)\n      let initialVotes = event.data.event.dates.map(date => ({ date: date.date, vote: \"blue\" }))\n      if(event.data.event.dates[0].votes.filter(vote => vote.voter === user.data.me.username).length !== 0){\n        initialVotes = event.data.event.dates.map(date => ({ date: date.date, vote: date.votes.find(vote => vote.voter === user.data.me.username ).vote }))\n      }\n      setVotes(initialVotes)\n    }\n  },[event.data])\n\n  if(!event.data){\n    return(\n      <div>\n        ...loading\n      </div>\n    )\n  }\n  console.log(votes)\n  return(\n    <div>\n      {event.data.event.name}\n      <EventCalendar dates = {event.data.event.dates.map(date => date.date)} setVotes={setVotes} votes={votes}/>\n      <button id=\"voting-button\" onClick={() => vote({ variables: { id: event.data.event.id, votes } })}>Vote</button>\n      <button id=\"homepage-button\"> <Link to=\"/\">Home Page</Link></button>\n    </div>\n  )\n}\n\nexport default Event","import React, { useState } from \"react\"\nimport * as dateFns from \"date-fns\"\nimport \"../App.css\"\n\nconst PreviewCalendar = ({ events }) => {\n  console.log(events)\n  const dates = events.filter(event => event.status === \"done\").map(event => ({ date: event.finalDate, name: event.name }))\n  console.log(dates)\n  const [ month, setMonth ] = useState(new Date())\n  return(\n    <div className=\"calendar\">\n      <Header month={month} setMonth={setMonth}/>\n      <Days month={month}/>\n      <Cells month={month} dates={dates}/>\n    </div>\n  )\n}\n\nconst Header = ({ month, setMonth }) => {\n  const dateFormat = \"MMMM YYYYY\"\n\n  const nextMonth = () => {\n    setMonth(dateFns.addMonths(month, 1))\n  }\n\n  const prevMonth = () => {\n    setMonth(dateFns.subMonths(month,1))\n  }\n\n  return (\n    <div className=\"header row flex-middle\">\n      <div className=\"col col-start\">\n        <div className=\"icon\" onClick={prevMonth}>\n          chevron_left\n        </div>\n      </div>\n      <div className=\"col col-center\">\n        <span>\n          {dateFns.format(month, dateFormat)}\n        </span>\n      </div>\n      <div className=\"col col-end\" onClick={nextMonth}>\n        <div className=\"icon\">chevron_right</div>\n      </div>\n    </div>\n  )\n\n}\n\nconst Days = ({ month }) => {\n\n  let startDate = dateFns.startOfWeek(month)\n\n  const shortWeekDaysArray = Array.from(Array(7)).map((e, i) => (<div className=\"col col-center\" key={i}>\n    {dateFns.format(dateFns.addDays(startDate, i), \"EEEEEE\")}\n  </div> ))\n\n  return(\n    <div className=\"days row\">{shortWeekDaysArray}</div>\n  )\n}\n\nconst Cells = ({ month, dates }) => {\n\n  const monthStart = dateFns.startOfMonth(month)\n  const monthEnd = dateFns.endOfMonth(monthStart)\n  const startDate = dateFns.startOfWeek(monthStart)\n  const endDate = dateFns.endOfWeek(monthEnd)\n\n  const dateFormat = \"d\"\n  const rows = []\n\n  let days = []\n  let day = startDate\n  let formattedDate = \"\"\n\n  while(day <= endDate){\n    for(let i = 0; i<7; i++){\n      formattedDate = dateFns.format(day, dateFormat)\n      const cloneDay = day\n      days.push(\n        <CalendarDate key={cloneDay} formattedDate = {formattedDate} day={cloneDay} monthStart={monthStart} dates={dates}/>\n      )\n      day = dateFns.addDays(day, 1)\n    }\n    rows.push(\n      <div className=\"row\" key={day}>\n        {days}\n      </div>\n    )\n    days=[]\n  }\n\n  return(\n    <div className=\"body\">{rows}</div>\n  )\n\n}\n\nconst CalendarDate = ({ formattedDate, day, monthStart, dates }) => {\n  const event = dates.find(date => date.date === dateFns.format(day, \"DDD\"))\n  console.log(event)\n  return(\n    <div\n      className={`col cell ${!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : \"\"}`}\n      key={day}\n    >\n      <span className=\"number\">{formattedDate}</span>\n      <span className=\"bg\">{formattedDate}</span>\n      <div>\n        {event ? event.name : null}\n      </div>\n    </div>\n  )\n}\n\nexport default PreviewCalendar","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nconst Events = ({ events }) => {\n  const displayEvents = events.map(event => (<li key={event.id}><Link to={`/events/${event.id}`}>{event.name}</Link></li>))\n\n  return(\n    <div>\n      <ul>\n        {displayEvents}\n      </ul>\n    </div>\n  )\n}\n\nexport default Events","import React, { useEffect } from \"react\"\nimport PreviewCalendar from \"./PreviewCalendar\"\nimport Events from \"./Events\"\nimport Button from \"react-bootstrap/Button\"\nimport { Link } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ME } from \"../graphql/queries\"\n\n\nconst HomePage = ({ logout }) => {\n  const user= useQuery(ME)\n  if(user.data){\n    console.log(user.data.me.events)\n  }\n  useEffect(() => {\n    if(user.error){\n      if(user.error.message===\"user needs to be logged in\"){\n        logout()\n      }\n    }\n\n  },[user])\n  if(!user.data){\n    return(\n      <div>\n        loading...\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      <h2>Hello {user.data.me.name} </h2>\n      <PreviewCalendar events={user.data.me.events} />\n      <Events events={user.data.me.events}/>\n      <Button id=\"addEvent-button\"><Link to=\"/addevent\">add event</Link></Button>\n      <button id=\"logout-button\"onClick={logout}>Log Out</button>\n      <button id=\"addGroup-button\"><Link to=\"/addGroup\">add group</Link></button>\n      <button id=\"groups-button\"><Link to=\"/groups\">groups</Link></button>\n      <button id=\"join-group-button\"><Link to=\"/joinGroup\">join group</Link></button>\n    </div>\n  )\n}\n\nexport default HomePage","import React from \"react\"\nimport { useQuery } from \"@apollo/client\"\nimport { USER_GROUPS } from \"../graphql/queries\"\nimport { Link } from \"react-router-dom\"\nconst Groups = () => {\n  const groups = useQuery(USER_GROUPS)\n  const displayGroups = groups.data ? groups.data.userGroups.map(group => (<li key={group.name}><Link to ={`/groups/${group.id}`}>{group.name}</Link></li>)) : []\n  if(displayGroups.length === 0 && groups.data){\n    return(\n      <div>\n        <h2>{\"It seems you aren't part any group yet\"}</h2>\n        <h2><Link to=\"/joinGroup\">Join Here</Link></h2>\n      </div>\n    )\n  }\n  return(\n    <div>\n      <ul>\n        {displayGroups}\n      </ul>\n    </div>\n  )\n}\n\nexport default Groups","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nconst Users = ({ users }) => {\n  const displayUsers = users.map(user => (<li key={user.id}><Link to={`/users/${user.username}`}>{user.name}</Link></li>))\n\n  return(\n    <div>\n      <ul>\n        {displayUsers}\n      </ul>\n    </div>\n  )\n}\n\nexport default Users","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_GROUP } from \"../graphql/queries\"\nimport Users from \"./Users\"\n\nconst Group = () => {\n  const id= useParams().id\n  const group = useQuery(GET_GROUP, { variables: { id } })\n  console.log(group.data)\n  return(\n    <div>\n      {group.data ? group.data.group.name : null}\n      {group.data ? <Users users = {group.data.group.users}/> : null}\n    </div>\n  )\n}\n\nexport default Group","import React from \"react\"\nimport { useQuery } from \"@apollo/client\"\nimport { useParams } from \"react-router-dom\"\nimport { GET_USER } from \"../graphql/queries\"\n\nconst Event = () => {\n  const username = useParams().username\n  const user = useQuery(GET_USER, { variables: { username } })\n  console.log(user)\n  if(!user.data){\n    return(\n      <div>\n        ...loading\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      {user.data.user.name}\n    </div>\n  )\n}\n\nexport default Event","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { GROUPS_THAT_USER_IS_NOT_IN } from \"../graphql/queries\"\nimport { JOIN_GROUP } from \"../graphql/mutations\"\nimport { Link } from \"react-router-dom\"\n\nconst JoinGroupElement = ({ group }) => {\n  const [ join ] = useMutation(JOIN_GROUP)\n  return(\n    <li>\n      <span>\n        {group.name}\n        <button onClick={() => join({ variables: { id: group.id } })}>Join</button>\n      </span>\n    </li>\n  )\n}\n\nconst JoinGroup = () => {\n  const groups = useQuery(GROUPS_THAT_USER_IS_NOT_IN)\n  return (\n    <div>\n      Hello World\n      <ul>\n        {groups.data ? groups.data.groupsUserNotIn.map(group => (<JoinGroupElement key = {group.id} group={group}/>)) : null }\n      </ul>\n      <button id=\"homepage-button\"> <Link to=\"/\">Home Page</Link></button>\n    </div>\n  )\n}\n\nexport default JoinGroup","import React from \"react\"\n\nconst Notification= ({ notification }) => {\n  if(notification===null){\n    return null\n  }\n  let style = \"success\"\n  if(notification.error){\n    style=\"error\"\n  }\n  return(\n    <div id=\"notification\"className={style}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import { useApolloClient ,useMutation } from \"@apollo/client\"\nimport { LOGIN, SIGN_IN } from \"../graphql/mutations\"\nimport { useHistory } from \"react-router-dom\"\n\n\nconst useLogin = (setToken, setNotification) => {\n  const history = useHistory()\n  const client = useApolloClient()\n  console.log(\"history\", history)\n  const [ signInMutation] = useMutation(SIGN_IN, {\n    onError: (error) => {\n      let message = error.graphQLErrors[0].message\n      if(message.startsWith(\"User validation failed: username: Error, expected `username` to be unique\")){\n        message = \"Username needs to be unique\"\n      }\n      setNotification({ message, error: true })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n\n  })\n  const [ loginMutation ] = useMutation(LOGIN, {\n    onError: (error) => {\n      setNotification({ message: error.graphQLErrors[0].message, error: true })\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  })\n\n  const login = async ({ username, password }) => {\n    console.log(username, password)\n    const result = await loginMutation({ variables: { username, password } })\n    console.log(result)\n    if(result.data.login.value){\n      setToken(result.data.login.value)\n      localStorage.setItem(\"user-token\", result.data.login.value)\n      history.push(\"/\")\n    }\n\n  }\n\n  const logout =  () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  const signIn = async( username, name, password ) => {\n    const result = await signInMutation({ variables: { username, name, password } })\n    return result\n  }\n\n\n\n  return{\n    login,\n    logout,\n    signIn\n  }\n}\n\nexport default useLogin","\nimport Login from \"./components/Login\"\nimport React, { useState } from \"react\"\nimport SignIn from \"./components/SignIn\"\n\nimport AddEvent from \"./components/AddEvent\"\nimport AddGroup from \"./components/AddGroup\"\nimport Event from \"./components/Event\"\nimport HomePage from \"./components/HomePage\"\nimport Groups from \"./components/Groups\"\nimport Group from \"./components/Group\"\nimport User from \"./components/User\"\nimport JoinGroup from \"./components/JoinGroup\"\nimport Notification from \"./components/Notification\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport useLogin from \"./hooks/useLogin\"\n\n\nconst App = () => {\n  const [ notification, setNotification ] = useState(null)\n\n\n\n  return (\n    <div>\n      <Notification notification={notification}/>\n      <Router>\n        <AppRouter setNotification={setNotification}/>\n      </Router>\n    </div>\n\n  )\n}\n\nconst AppRouter = ({ setNotification }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"user-token\"))\n  const { logout, login, signIn } = useLogin(setToken, setNotification)\n  return(\n    <Switch>\n      <Route path=\"/joinGroup\">\n        {token ? <JoinGroup/> : <Redirect to=\"/login\"/> }\n      </Route>\n      <Route path=\"/users/:username\">\n        {token ? <User/>: <Redirect to=\"/login\"/>}\n      </Route>\n      <Route path =\"/groups/:id\">\n        { token ? <Group/>: <Redirect to=\"/login\"/>}\n      </Route>\n      <Route path=\"/groups\">\n        {token ? <Groups/> : <Redirect to=\"/login\"/> }\n      </Route>\n      <Route path=\"/addGroup\">\n        { token ? <AddGroup/> : <Redirect to=\"/login\"/> }\n      </Route>\n      <Route path=\"/SignIn\">\n        <SignIn login = {login} signIn = {signIn}/>\n      </Route>\n      <Route path=\"/login\">\n        <Login login = {login} />\n      </Route>\n      <Route path=\"/events/:id\">\n        {token ? <Event/> : <Redirect to=\"/login\"/> }\n      </Route>\n      <Route path=\"/addevent\">\n        {token ? <AddEvent setNotification={setNotification}/> : <Redirect to=\"/login\"/>}\n      </Route>\n      <Route path=\"/\">\n        {token ? <HomePage logout={logout}/> : <Redirect to=\"/login\"/>}\n      </Route>\n    </Switch>\n  )\n}\n\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { setContext } from \"apollo-link-context\"\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\"\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"user-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: \"/graphql\" })\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"))\n"],"sourceRoot":""}